declare const _default: import("vue").DefineComponent<{
    readonly disabled: BooleanConstructor;
    readonly currentPage: import("../../../../utils").BuildPropReturn<NumberConstructor, 1, unknown, unknown, unknown>;
    readonly pageCount: import("../../../../utils").BuildPropReturn<NumberConstructor, 50, unknown, unknown, unknown>;
    readonly nextText: import("../../../../utils").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
}, {
    props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
        readonly disabled: BooleanConstructor;
        readonly currentPage: import("../../../../utils").BuildPropReturn<NumberConstructor, 1, unknown, unknown, unknown>;
        readonly pageCount: import("../../../../utils").BuildPropReturn<NumberConstructor, 50, unknown, unknown, unknown>;
        readonly nextText: import("../../../../utils").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    }>> & {
        onClick?: ((...args: any[]) => any) | undefined;
    }>>;
    internalDisabled: import("vue").ComputedRef<boolean>;
    ElIcon: import("../../../../utils").SFCWithInstall<import("vue").DefineComponent<{
        readonly size: import("../../../../utils").BuildPropReturn<import("../../../../utils").PropWrapper<string | number>, unknown, unknown, unknown, unknown>;
        readonly color: import("../../../../utils").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    }, {
        props: Readonly<import("@vue/shared").LooseRequired<Readonly<import("vue").ExtractPropTypes<{
            readonly size: import("../../../../utils").BuildPropReturn<import("../../../../utils").PropWrapper<string | number>, unknown, unknown, unknown, unknown>;
            readonly color: import("../../../../utils").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
        }>> & {
            [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
        }>>;
        ns: {
            namespace: import("vue").ComputedRef<string>;
            b: (blockSuffix?: string) => string;
            e: (element?: string | undefined) => string;
            m: (modifier?: string | undefined) => string;
            be: (blockSuffix?: string | undefined, element?: string | undefined) => string;
            em: (element?: string | undefined, modifier?: string | undefined) => string;
            bm: (blockSuffix?: string | undefined, modifier?: string | undefined) => string;
            bem: (blockSuffix?: string | undefined, element?: string | undefined, modifier?: string | undefined) => string;
            is: {
                (name: string, state: boolean | undefined): string;
                (name: string): string;
            };
            cssVar: (object: Record<string, string>) => Record<string, string>;
            cssVarName: (name: string) => string;
            cssVarBlock: (object: Record<string, string>) => Record<string, string>;
            cssVarBlockName: (name: string) => string;
        };
        style: import("vue").ComputedRef<import("vue").CSSProperties>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        readonly size: import("../../../../utils").BuildPropReturn<import("../../../../utils").PropWrapper<string | number>, unknown, unknown, unknown, unknown>;
        readonly color: import("../../../../utils").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
    }>>, {
        size: import("../../../../utils").BuildPropType<import("../../../../utils").PropWrapper<string | number>, unknown, unknown>;
        color: string;
    }>> & Record<string, any>;
    ArrowRight: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, import("vue").EmitsOptions, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    readonly disabled: BooleanConstructor;
    readonly currentPage: import("../../../../utils").BuildPropReturn<NumberConstructor, 1, unknown, unknown, unknown>;
    readonly pageCount: import("../../../../utils").BuildPropReturn<NumberConstructor, 50, unknown, unknown, unknown>;
    readonly nextText: import("../../../../utils").BuildPropReturn<StringConstructor, unknown, unknown, unknown, unknown>;
}>> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    disabled: boolean;
    nextText: string;
    currentPage: number;
    pageCount: number;
}>;
export default _default;
